type FuturesContractOpened @entity {
  id: Bytes!
  contractId: BigInt! # uint256
  childId: BigInt! # uint256
  orderId: BigInt! # uint256
  quantity: BigInt! # uint256
  pricePerUnit: BigInt! # uint256
  childContract: Bytes! # address
  originalMarket: Bytes! # address
  originalHolder: Bytes! # address
  blockNumber: BigInt!
  blockTimestamp: BigInt!
  transactionHash: Bytes!
}
type ChildClaimedAfterSettlement @entity {
  id: Bytes!
  contractId: BigInt! # uint256
  claimer: Bytes! # address
  quantity: BigInt! # uint256
  childId: BigInt! # uint256
  blockNumber: BigInt!
  blockTimestamp: BigInt!
  transactionHash: Bytes!
}

type RightsDeposited @entity {
  id: Bytes!
  rightsKey: Bytes! # bytes32
  depositor: Bytes! # address
  childContract: Bytes! # address
  originalMarket: Bytes! # address
  childId: BigInt! # uint256
  orderId: BigInt! # uint256
  amount: BigInt! # uint256
  blockNumber: BigInt!
  blockTimestamp: BigInt!
  transactionHash: Bytes!
}

type RightsWithdrawn @entity {
  id: Bytes!
  rightsKey: Bytes! # bytes32
  withdrawer: Bytes! # address
  amount: BigInt! # uint256
  blockNumber: BigInt!
  blockTimestamp: BigInt!
  transactionHash: Bytes!
}
type FGOFuturesEscrowChildClaimedAfterSettlement @entity {
  id: Bytes!
  contractId: BigInt! # uint256
  claimer: Bytes! # address
  quantity: BigInt! # uint256
  childId: BigInt! # uint256
  blockNumber: BigInt!
  blockTimestamp: BigInt!
  transactionHash: Bytes!
}

type FGOFuturesEscrowRightsDeposited @entity {
  id: Bytes!
  rightsKey: Bytes! # bytes32
  depositor: Bytes! # address
  childContract: Bytes! # address
  originalMarket: Bytes! # address
  childId: BigInt! # uint256
  orderId: BigInt! # uint256
  amount: BigInt! # uint256
  blockNumber: BigInt!
  blockTimestamp: BigInt!
  transactionHash: Bytes!
}

type FGOFuturesEscrowRightsWithdrawn @entity {
  id: Bytes!
  rightsKey: Bytes! # bytes32
  withdrawer: Bytes! # address
  amount: BigInt! # uint256
  blockNumber: BigInt!
  blockTimestamp: BigInt!
  transactionHash: Bytes!
}
type ContractSettled @entity {
  id: Bytes!
  contractId: BigInt! # uint256
  reward: BigInt! # uint256
  actualCompletionTime: BigInt! # uint256
  mevBot: Bytes! # address
  blockNumber: BigInt!
  blockTimestamp: BigInt!
  transactionHash: Bytes!
}

type MEVBotRegistered @entity {
  id: Bytes!
  stakeAmount: BigInt! # uint256
  bot: Bytes! # address
  blockNumber: BigInt!
  blockTimestamp: BigInt!
  transactionHash: Bytes!
}

type MEVBotSlashed @entity {
  id: Bytes!
  slashAmount: BigInt! # uint256
  bot: Bytes! # address
  blockNumber: BigInt!
  blockTimestamp: BigInt!
  transactionHash: Bytes!
}

type StakeWithdrawn @entity {
  id: Bytes!
  amount: BigInt! # uint256
  bot: Bytes! # address
  blockNumber: BigInt!
  blockTimestamp: BigInt!
  transactionHash: Bytes!
}
